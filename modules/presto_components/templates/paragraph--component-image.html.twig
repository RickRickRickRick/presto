{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */


#}
{%
set classes = [
  'clearfix',
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  content.field_variation['#items'].getString(),
]
%}


{% if (view_mode == 'preview') %}
  {# Case when you edit the node. #}
  {% block paragraph %}
    <div{{ attributes.addClass(classes) }}>
      {% block content %}
        {{ content }}
      {% endblock %}
    </div>
  {% endblock paragraph %}

{% else %}

  {% set data_caption = content.field_caption['#items'].0.value|raw  %}
  {% set link_url = content.field_link['#items'].0.getUrl().uri %}
  {% set image_uri = file_url(content.field_media[0]['#media'].get('field_image').entity.uri.value) %}
  {# set image_lightbox = content.field_image.0|merge({'#image_style': 'large'}) #}
  {# file_url(image['#item'].entity.uri.value) #}

  <div{{ attributes.addClass(classes) }}>

    {% if (content.field_variation['#items'].getString() == 'image_standard' ) %}
      <figure class="clearfix">
        {{ content.field_media }}
        <div class="figcaption-wrap"></div>
      </figure>
    {% endif %}

    {% if (content.field_variation['#items'].getString() == 'image_with_lightbox_over' ) %}
      <figure class="clearfix">
        {{ content.field_media }}
        <a class="lightbox ilightbox-enabled" href="{{ image_uri }}" {{ data_caption }}></a>
      </figure>
    {%  endif %}

    {% if (content.field_variation['#items'].getString() == 'image_with_link' ) %}
      <figure class="clearfix animated-overlay overlay-alt">
        <a class="img-link" href="{{ link_url }}" {{ data_caption }} >
          {{ content.field_media }}
        </a>
        <figcaption>
          <div class="thumb-info thumb-info-alt"><i class="ss-link"></i></div>
        </figcaption>
      </figure>

    {%  endif %}

    {% if (content.field_variation['#items'].getString() == 'image_with_caption_hover' ) %}
      <figure class="clearfix animated-overlay overlay-style caption-hover clearfix">
        {{ content.field_media }}
        <a class="lightbox ilightbox-enabled" href="{{ image_lightbox }}" data-caption="{{ data_caption }}"></a>
        <div class="figcaption-wrap"></div>
        <figcaption>
          <div class="thumb-info">
            <h4>{{ data_caption }}</h4>
          </div>
        </figcaption>
      </figure>
    {%  endif %}

    {% if (content.field_variation['#items'].getString() == 'image_with_caption_below' ) %}
      <figure class="clearfix">
        {{ content.field_media }}
        <div class="figcaption-wrap"></div>
      </figure>
      <div class="image-caption clearfix" style>
        <h4>{{ data_caption }}</h4>
      </div>
    {%  endif %}

  </div>

{% endif %}

